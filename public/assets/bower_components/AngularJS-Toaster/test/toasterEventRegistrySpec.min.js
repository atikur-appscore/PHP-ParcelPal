"use strict";describe("toasterEventRegistry",function(){var c,b,a,d,e;beforeEach(function(){module("testApp");module("toaster");inject(function(h,i,j,g,f){c=h;b=i;a=j;d=g;e=f})});it("unsubscribeToNewToastEvent will throw error if newToastEventSubscribers is empty and deregisterNewToast is not defined",function(){var f=false;try{a.unsubscribeToNewToastEvent(function(){})}catch(g){expect(g.message.indexOf(" is not a function")).toBeGreaterThan(-1);f=true}expect(f).toBe(true)});it("unsubscribeToNewToastEvent will not splice if index not found and will not throw error",function(){var f=false;var g=function(i){};a.subscribeToNewToastEvent(g);try{a.unsubscribeToNewToastEvent(function(){})}catch(h){f=true}expect(f).toBe(false)});it("unsubscribeToClearToastsEvent will throw error if clearToastsEventSubscribers is empty and deregisterClearToasts is not defined",function(){var f=false;try{a.unsubscribeToClearToastsEvent(function(){})}catch(g){expect(g.message.indexOf(" is not a function")).toBeGreaterThan(-1);f=true}expect(f).toBe(true)});it("unsubscribeToClearToastsEvent will not splice if index not found and will not throw error",function(){var f=false;var g=function(i){};a.subscribeToClearToastsEvent(g);try{a.unsubscribeToClearToastsEvent(function(){})}catch(h){f=true}expect(f).toBe(false)})});