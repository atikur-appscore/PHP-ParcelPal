"use strict";describe("directiveTemplate",function(){var b,d,c;beforeEach(function(){e();module("testApp");module("toaster");inject(function(i,h,g){b=i;d=h;c=g})});it("should load and render the referenced directive template text",function(){var g=f();a({type:"info",body:"bind-template-only",bodyOutputType:"directive"});expect(g[0].innerText).toBe("here is some great new text! It was brought in via directive!")});it("should bind directiveData to the directive template",function(){var g=f();a({type:"info",body:"bind-template-with-data",bodyOutputType:"directive",directiveData:{name:"Bob"}});expect(g[0].innerText).toBe("Hello Bob")});it("should parse type string directiveData to an object",function(){var g=f();a({type:"info",body:"bind-template-with-data",bodyOutputType:"directive",directiveData:'{ "name": "Bob" }'});expect(g[0].innerText).toBe("Hello Bob")});it("should render type number directiveData",function(){var g=f();a({type:"info",body:"bind-template-with-numeric-data",bodyOutputType:"directive",directiveData:2});expect(g[0].innerText).toBe("1 + 1 = 2")});it("should bind Attribute-restricted templates",function(){var g=f();a({type:"info",body:"bind-template-only",bodyOutputType:"directive",directiveData:{name:"Bob"}});expect(g[0].innerText).toBe("here is some great new text! It was brought in via directive!")});it("should bind unrestricted templates",function(){var g=f();a({type:"info",body:"unrestricted-template",bodyOutputType:"directive"});expect(g[0].innerText).toBe("Unrestricted Template")});it("should not bind Element-only-restricted templates",function(){var g=false;var h=f();try{a({type:"info",body:"element-template",bodyOutputType:"directive"})}catch(j){var i='Directives must be usable as attributes. Add "A" to the restrict option (or remove the option entirely). Occurred for directive element-template.';expect(j.message).toBe(i);g=true}expect(g).toBe(true)});it("should not bind Class-only-restricted templates",function(){var g=false;var h=f();try{a({type:"info",body:"class-template",bodyOutputType:"directive"})}catch(j){var i='Directives must be usable as attributes. Add "A" to the restrict option (or remove the option entirely). Occurred for directive class-template.';expect(j.message).toBe(i);g=true}expect(g).toBe(true)});it("should throw an error if directiveName argument is not passed via body",function(){var h=f();var g=false;expect(h[0].innerText).toBe("");try{a({type:"info",bodyOutputType:"directive"})}catch(i){expect(i.message).toBe("A valid directive name must be provided via the toast body argument when using bodyOutputType: directive");g=true}expect(h[0].innerText).toBe("");expect(g).toBe(true)});it("should throw an error if directiveName argument is an empty string",function(){var h=f();var g=false;expect(h[0].innerText).toBe("");try{a({type:"info",body:"",bodyOutputType:"directive"})}catch(i){expect(i.message).toBe("A valid directive name must be provided via the toast body argument when using bodyOutputType: directive");g=true}expect(h[0].innerText).toBe("");expect(g).toBe(true)});it("should throw an error if the directive could not be found",function(){var g=false;f();try{a({type:"info",body:"non-existent-directive",bodyOutputType:"directive"})}catch(i){var h="non-existent-directive could not be found. The name should appear as it exists in the markup, not camelCased as it would appear in the directive declaration, e.g. directive-name not directiveName.";expect(i.message).toBe(h);g=true}expect(g).toBe(true)});it("should throw an error if the directive uses isolate scope",function(){var g=false;f();try{a({type:"info",body:"isolate-scope",bodyOutputType:"directive"})}catch(i){var h="Cannot use a directive with an isolated scope. The scope must be either true or falsy (e.g. false/null/undefined). Occurred for directive isolate-scope.";expect(i.message).toBe(h);g=true}expect(g).toBe(true)});function f(){var g=angular.element("<toaster-container></toaster-container>");c(g)(d);d.$digest();return g}function a(g){b.pop(g);d.$digest()}function e(){angular.module("testApp",[]).directive("bindTemplateOnly",function(){return{restrict:"A",template:'here is some great new text! <span style="color:orange">It was brought in via directive!</span>'}}).directive("bindTemplateWithData",function(){return{template:"Hello {{directiveData.name}}"}}).directive("bindTemplateWithNumericData",function(){return{template:"1 + 1 = {{directiveData}}"}}).directive("elementTemplate",function(){return{restrict:"E",template:"Element Template"}}).directive("classTemplate",function(){return{restrict:"C",template:"Class Template"}}).directive("unrestrictedTemplate",function(){return{template:"Unrestricted Template"}}).directive("isolateScope",function(){return{template:"isolate scope template",scope:{}}})}});