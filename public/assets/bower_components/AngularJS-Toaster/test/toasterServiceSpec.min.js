"use strict";describe("toasterService",function(){var b,a,c,d;beforeEach(function(){module("testApp");module("toaster");inject(function(g,h,f,e){b=g;a=h;c=f;d=e})});it("should create an error method from error icon class",function(){var e=angular.element("<toaster-container></toaster-container>");d(e)(c);c.$digest();var f=e.scope();expect(f.toasters.length).toBe(0);expect(a["icon-classes"].error).toBe("toast-error");b.error("test","test");c.$digest();expect(f.toasters.length).toBe(1);expect(f.toasters[0].type).toBe("toast-error")});it("should create an error method from info icon class",function(){var e=angular.element("<toaster-container></toaster-container>");d(e)(c);c.$digest();var f=e.scope();expect(f.toasters.length).toBe(0);expect(a["icon-classes"].info).toBe("toast-info");b.info("test","test");c.$digest();expect(f.toasters.length).toBe(1);expect(f.toasters[0].type).toBe("toast-info")});it("should create an error method from wait icon class",function(){var e=angular.element("<toaster-container></toaster-container>");d(e)(c);c.$digest();var f=e.scope();expect(f.toasters.length).toBe(0);expect(a["icon-classes"].wait).toBe("toast-wait");b.wait("test","test");c.$digest();expect(f.toasters.length).toBe(1);expect(f.toasters[0].type).toBe("toast-wait")});it("should create an error method from success icon class",function(){var e=angular.element("<toaster-container></toaster-container>");d(e)(c);c.$digest();var f=e.scope();expect(f.toasters.length).toBe(0);expect(a["icon-classes"].success).toBe("toast-success");b.success("test","test");c.$digest();expect(f.toasters.length).toBe(1);expect(f.toasters[0].type).toBe("toast-success")});it("should create an error method from warning icon class",function(){var e=angular.element("<toaster-container></toaster-container>");d(e)(c);c.$digest();var f=e.scope();expect(f.toasters.length).toBe(0);expect(a["icon-classes"].warning).toBe("toast-warning");b.warning("test","test");c.$digest();expect(f.toasters.length).toBe(1);expect(f.toasters[0].type).toBe("toast-warning")});it("should create a  method from the icon class that takes an object",function(){var e=angular.element("<toaster-container></toaster-container>");d(e)(c);c.$digest();var f=e.scope();expect(f.toasters.length).toBe(0);expect(a["icon-classes"].error).toBe("toast-error");b.error({title:"test",body:"test"});c.$digest();expect(f.toasters.length).toBe(1);expect(f.toasters[0].type).toBe("toast-error")})});